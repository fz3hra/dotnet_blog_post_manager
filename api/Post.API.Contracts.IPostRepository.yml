### YamlMime:ManagedReference
items:
- uid: Post.API.Contracts.IPostRepository
  commentId: T:Post.API.Contracts.IPostRepository
  id: IPostRepository
  parent: Post.API.Contracts
  children:
  - Post.API.Contracts.IPostRepository.CreatePost(Post.API.ModelDtos.CreatePostDto,System.String)
  - Post.API.Contracts.IPostRepository.DeletePost(System.Int32,System.String)
  - Post.API.Contracts.IPostRepository.GetAllPosts(System.String,System.Nullable{Post.API.Data.PostStatus})
  - Post.API.Contracts.IPostRepository.GetPostById(System.Int32)
  - Post.API.Contracts.IPostRepository.GetPostsByTag(System.String)
  - Post.API.Contracts.IPostRepository.IncrementViewCount(System.Int32)
  - Post.API.Contracts.IPostRepository.SearchPosts(System.String)
  - Post.API.Contracts.IPostRepository.UpdatePost(System.Int32,Post.API.ModelDtos.UpdatePostDto,System.String)
  langs:
  - csharp
  - vb
  name: IPostRepository
  nameWithType: IPostRepository
  fullName: Post.API.Contracts.IPostRepository
  type: Interface
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: IPostRepository
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 5
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: public interface IPostRepository
    content.vb: Public Interface IPostRepository
- uid: Post.API.Contracts.IPostRepository.CreatePost(Post.API.ModelDtos.CreatePostDto,System.String)
  commentId: M:Post.API.Contracts.IPostRepository.CreatePost(Post.API.ModelDtos.CreatePostDto,System.String)
  id: CreatePost(Post.API.ModelDtos.CreatePostDto,System.String)
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: CreatePost(CreatePostDto, string)
  nameWithType: IPostRepository.CreatePost(CreatePostDto, string)
  fullName: Post.API.Contracts.IPostRepository.CreatePost(Post.API.ModelDtos.CreatePostDto, string)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: CreatePost
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 7
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<PostResponse> CreatePost(CreatePostDto postDto, string userId)
    parameters:
    - id: postDto
      type: Post.API.ModelDtos.CreatePostDto
    - id: userId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Post.API.ModelDtos.PostResponse}
    content.vb: Function CreatePost(postDto As CreatePostDto, userId As String) As Task(Of PostResponse)
  overload: Post.API.Contracts.IPostRepository.CreatePost*
  nameWithType.vb: IPostRepository.CreatePost(CreatePostDto, String)
  fullName.vb: Post.API.Contracts.IPostRepository.CreatePost(Post.API.ModelDtos.CreatePostDto, String)
  name.vb: CreatePost(CreatePostDto, String)
- uid: Post.API.Contracts.IPostRepository.GetAllPosts(System.String,System.Nullable{Post.API.Data.PostStatus})
  commentId: M:Post.API.Contracts.IPostRepository.GetAllPosts(System.String,System.Nullable{Post.API.Data.PostStatus})
  id: GetAllPosts(System.String,System.Nullable{Post.API.Data.PostStatus})
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: GetAllPosts(string?, PostStatus?)
  nameWithType: IPostRepository.GetAllPosts(string?, PostStatus?)
  fullName: Post.API.Contracts.IPostRepository.GetAllPosts(string?, Post.API.Data.PostStatus?)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: GetAllPosts
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 9
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<PostsResponse> GetAllPosts(string? userId = null, PostStatus? status = null)
    parameters:
    - id: userId
      type: System.String
    - id: status
      type: System.Nullable{Post.API.Data.PostStatus}
    return:
      type: System.Threading.Tasks.Task{Post.API.ModelDtos.PostsResponse}
    content.vb: Function GetAllPosts(userId As String = Nothing, status As PostStatus? = Nothing) As Task(Of PostsResponse)
  overload: Post.API.Contracts.IPostRepository.GetAllPosts*
  nameWithType.vb: IPostRepository.GetAllPosts(String, PostStatus?)
  fullName.vb: Post.API.Contracts.IPostRepository.GetAllPosts(String, Post.API.Data.PostStatus?)
  name.vb: GetAllPosts(String, PostStatus?)
- uid: Post.API.Contracts.IPostRepository.GetPostById(System.Int32)
  commentId: M:Post.API.Contracts.IPostRepository.GetPostById(System.Int32)
  id: GetPostById(System.Int32)
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: GetPostById(int)
  nameWithType: IPostRepository.GetPostById(int)
  fullName: Post.API.Contracts.IPostRepository.GetPostById(int)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: GetPostById
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 11
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<PostResponse> GetPostById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Post.API.ModelDtos.PostResponse}
    content.vb: Function GetPostById(id As Integer) As Task(Of PostResponse)
  overload: Post.API.Contracts.IPostRepository.GetPostById*
  nameWithType.vb: IPostRepository.GetPostById(Integer)
  fullName.vb: Post.API.Contracts.IPostRepository.GetPostById(Integer)
  name.vb: GetPostById(Integer)
- uid: Post.API.Contracts.IPostRepository.UpdatePost(System.Int32,Post.API.ModelDtos.UpdatePostDto,System.String)
  commentId: M:Post.API.Contracts.IPostRepository.UpdatePost(System.Int32,Post.API.ModelDtos.UpdatePostDto,System.String)
  id: UpdatePost(System.Int32,Post.API.ModelDtos.UpdatePostDto,System.String)
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: UpdatePost(int, UpdatePostDto, string)
  nameWithType: IPostRepository.UpdatePost(int, UpdatePostDto, string)
  fullName: Post.API.Contracts.IPostRepository.UpdatePost(int, Post.API.ModelDtos.UpdatePostDto, string)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: UpdatePost
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 13
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<PostResponse> UpdatePost(int id, UpdatePostDto postDto, string userId)
    parameters:
    - id: id
      type: System.Int32
    - id: postDto
      type: Post.API.ModelDtos.UpdatePostDto
    - id: userId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Post.API.ModelDtos.PostResponse}
    content.vb: Function UpdatePost(id As Integer, postDto As UpdatePostDto, userId As String) As Task(Of PostResponse)
  overload: Post.API.Contracts.IPostRepository.UpdatePost*
  nameWithType.vb: IPostRepository.UpdatePost(Integer, UpdatePostDto, String)
  fullName.vb: Post.API.Contracts.IPostRepository.UpdatePost(Integer, Post.API.ModelDtos.UpdatePostDto, String)
  name.vb: UpdatePost(Integer, UpdatePostDto, String)
- uid: Post.API.Contracts.IPostRepository.DeletePost(System.Int32,System.String)
  commentId: M:Post.API.Contracts.IPostRepository.DeletePost(System.Int32,System.String)
  id: DeletePost(System.Int32,System.String)
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: DeletePost(int, string)
  nameWithType: IPostRepository.DeletePost(int, string)
  fullName: Post.API.Contracts.IPostRepository.DeletePost(int, string)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: DeletePost
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 15
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<BaseResponse> DeletePost(int id, string userId)
    parameters:
    - id: id
      type: System.Int32
    - id: userId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Post.API.ModelDtos.BaseResponse}
    content.vb: Function DeletePost(id As Integer, userId As String) As Task(Of BaseResponse)
  overload: Post.API.Contracts.IPostRepository.DeletePost*
  nameWithType.vb: IPostRepository.DeletePost(Integer, String)
  fullName.vb: Post.API.Contracts.IPostRepository.DeletePost(Integer, String)
  name.vb: DeletePost(Integer, String)
- uid: Post.API.Contracts.IPostRepository.GetPostsByTag(System.String)
  commentId: M:Post.API.Contracts.IPostRepository.GetPostsByTag(System.String)
  id: GetPostsByTag(System.String)
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: GetPostsByTag(string)
  nameWithType: IPostRepository.GetPostsByTag(string)
  fullName: Post.API.Contracts.IPostRepository.GetPostsByTag(string)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: GetPostsByTag
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 17
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<PostsResponse> GetPostsByTag(string tag)
    parameters:
    - id: tag
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Post.API.ModelDtos.PostsResponse}
    content.vb: Function GetPostsByTag(tag As String) As Task(Of PostsResponse)
  overload: Post.API.Contracts.IPostRepository.GetPostsByTag*
  nameWithType.vb: IPostRepository.GetPostsByTag(String)
  fullName.vb: Post.API.Contracts.IPostRepository.GetPostsByTag(String)
  name.vb: GetPostsByTag(String)
- uid: Post.API.Contracts.IPostRepository.IncrementViewCount(System.Int32)
  commentId: M:Post.API.Contracts.IPostRepository.IncrementViewCount(System.Int32)
  id: IncrementViewCount(System.Int32)
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: IncrementViewCount(int)
  nameWithType: IPostRepository.IncrementViewCount(int)
  fullName: Post.API.Contracts.IPostRepository.IncrementViewCount(int)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: IncrementViewCount
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 18
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<bool> IncrementViewCount(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function IncrementViewCount(id As Integer) As Task(Of Boolean)
  overload: Post.API.Contracts.IPostRepository.IncrementViewCount*
  nameWithType.vb: IPostRepository.IncrementViewCount(Integer)
  fullName.vb: Post.API.Contracts.IPostRepository.IncrementViewCount(Integer)
  name.vb: IncrementViewCount(Integer)
- uid: Post.API.Contracts.IPostRepository.SearchPosts(System.String)
  commentId: M:Post.API.Contracts.IPostRepository.SearchPosts(System.String)
  id: SearchPosts(System.String)
  parent: Post.API.Contracts.IPostRepository
  langs:
  - csharp
  - vb
  name: SearchPosts(string)
  nameWithType: IPostRepository.SearchPosts(string)
  fullName: Post.API.Contracts.IPostRepository.SearchPosts(string)
  type: Method
  source:
    remote:
      path: Post.API/Contracts/IPostRepository.cs
      branch: main
      repo: https://github.com/fz3hra/dotnet_blog_post_manager.git
    id: SearchPosts
    path: Post.API/Contracts/IPostRepository.cs
    startLine: 19
  assemblies:
  - Post.API
  namespace: Post.API.Contracts
  syntax:
    content: Task<PostsResponse> SearchPosts(string searchTerm)
    parameters:
    - id: searchTerm
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Post.API.ModelDtos.PostsResponse}
    content.vb: Function SearchPosts(searchTerm As String) As Task(Of PostsResponse)
  overload: Post.API.Contracts.IPostRepository.SearchPosts*
  nameWithType.vb: IPostRepository.SearchPosts(String)
  fullName.vb: Post.API.Contracts.IPostRepository.SearchPosts(String)
  name.vb: SearchPosts(String)
references:
- uid: Post.API.Contracts
  commentId: N:Post.API.Contracts
  href: Post.html
  name: Post.API.Contracts
  nameWithType: Post.API.Contracts
  fullName: Post.API.Contracts
  spec.csharp:
  - uid: Post
    name: Post
    href: Post.html
  - name: .
  - uid: Post.API
    name: API
    href: Post.API.html
  - name: .
  - uid: Post.API.Contracts
    name: Contracts
    href: Post.API.Contracts.html
  spec.vb:
  - uid: Post
    name: Post
    href: Post.html
  - name: .
  - uid: Post.API
    name: API
    href: Post.API.html
  - name: .
  - uid: Post.API.Contracts
    name: Contracts
    href: Post.API.Contracts.html
- uid: Post.API.Contracts.IPostRepository.CreatePost*
  commentId: Overload:Post.API.Contracts.IPostRepository.CreatePost
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_CreatePost_Post_API_ModelDtos_CreatePostDto_System_String_
  name: CreatePost
  nameWithType: IPostRepository.CreatePost
  fullName: Post.API.Contracts.IPostRepository.CreatePost
- uid: Post.API.ModelDtos.CreatePostDto
  commentId: T:Post.API.ModelDtos.CreatePostDto
  parent: Post.API.ModelDtos
  href: Post.API.ModelDtos.CreatePostDto.html
  name: CreatePostDto
  nameWithType: CreatePostDto
  fullName: Post.API.ModelDtos.CreatePostDto
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{Post.API.ModelDtos.PostResponse}
  commentId: T:System.Threading.Tasks.Task{Post.API.ModelDtos.PostResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PostResponse>
  nameWithType: Task<PostResponse>
  fullName: System.Threading.Tasks.Task<Post.API.ModelDtos.PostResponse>
  nameWithType.vb: Task(Of PostResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Post.API.ModelDtos.PostResponse)
  name.vb: Task(Of PostResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Post.API.ModelDtos.PostResponse
    name: PostResponse
    href: Post.API.ModelDtos.PostResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Post.API.ModelDtos.PostResponse
    name: PostResponse
    href: Post.API.ModelDtos.PostResponse.html
  - name: )
- uid: Post.API.ModelDtos
  commentId: N:Post.API.ModelDtos
  href: Post.html
  name: Post.API.ModelDtos
  nameWithType: Post.API.ModelDtos
  fullName: Post.API.ModelDtos
  spec.csharp:
  - uid: Post
    name: Post
    href: Post.html
  - name: .
  - uid: Post.API
    name: API
    href: Post.API.html
  - name: .
  - uid: Post.API.ModelDtos
    name: ModelDtos
    href: Post.API.ModelDtos.html
  spec.vb:
  - uid: Post
    name: Post
    href: Post.html
  - name: .
  - uid: Post.API
    name: API
    href: Post.API.html
  - name: .
  - uid: Post.API.ModelDtos
    name: ModelDtos
    href: Post.API.ModelDtos.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Post.API.Contracts.IPostRepository.GetAllPosts*
  commentId: Overload:Post.API.Contracts.IPostRepository.GetAllPosts
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_GetAllPosts_System_String_System_Nullable_Post_API_Data_PostStatus__
  name: GetAllPosts
  nameWithType: IPostRepository.GetAllPosts
  fullName: Post.API.Contracts.IPostRepository.GetAllPosts
- uid: System.Nullable{Post.API.Data.PostStatus}
  commentId: T:System.Nullable{Post.API.Data.PostStatus}
  parent: System
  definition: System.Nullable`1
  href: Post.API.Data.PostStatus.html
  name: PostStatus?
  nameWithType: PostStatus?
  fullName: Post.API.Data.PostStatus?
  spec.csharp:
  - uid: Post.API.Data.PostStatus
    name: PostStatus
    href: Post.API.Data.PostStatus.html
  - name: '?'
  spec.vb:
  - uid: Post.API.Data.PostStatus
    name: PostStatus
    href: Post.API.Data.PostStatus.html
  - name: '?'
- uid: System.Threading.Tasks.Task{Post.API.ModelDtos.PostsResponse}
  commentId: T:System.Threading.Tasks.Task{Post.API.ModelDtos.PostsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PostsResponse>
  nameWithType: Task<PostsResponse>
  fullName: System.Threading.Tasks.Task<Post.API.ModelDtos.PostsResponse>
  nameWithType.vb: Task(Of PostsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Post.API.ModelDtos.PostsResponse)
  name.vb: Task(Of PostsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Post.API.ModelDtos.PostsResponse
    name: PostsResponse
    href: Post.API.ModelDtos.PostsResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Post.API.ModelDtos.PostsResponse
    name: PostsResponse
    href: Post.API.ModelDtos.PostsResponse.html
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Post.API.Contracts.IPostRepository.GetPostById*
  commentId: Overload:Post.API.Contracts.IPostRepository.GetPostById
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_GetPostById_System_Int32_
  name: GetPostById
  nameWithType: IPostRepository.GetPostById
  fullName: Post.API.Contracts.IPostRepository.GetPostById
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Post.API.Contracts.IPostRepository.UpdatePost*
  commentId: Overload:Post.API.Contracts.IPostRepository.UpdatePost
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_UpdatePost_System_Int32_Post_API_ModelDtos_UpdatePostDto_System_String_
  name: UpdatePost
  nameWithType: IPostRepository.UpdatePost
  fullName: Post.API.Contracts.IPostRepository.UpdatePost
- uid: Post.API.ModelDtos.UpdatePostDto
  commentId: T:Post.API.ModelDtos.UpdatePostDto
  parent: Post.API.ModelDtos
  href: Post.API.ModelDtos.UpdatePostDto.html
  name: UpdatePostDto
  nameWithType: UpdatePostDto
  fullName: Post.API.ModelDtos.UpdatePostDto
- uid: Post.API.Contracts.IPostRepository.DeletePost*
  commentId: Overload:Post.API.Contracts.IPostRepository.DeletePost
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_DeletePost_System_Int32_System_String_
  name: DeletePost
  nameWithType: IPostRepository.DeletePost
  fullName: Post.API.Contracts.IPostRepository.DeletePost
- uid: System.Threading.Tasks.Task{Post.API.ModelDtos.BaseResponse}
  commentId: T:System.Threading.Tasks.Task{Post.API.ModelDtos.BaseResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BaseResponse>
  nameWithType: Task<BaseResponse>
  fullName: System.Threading.Tasks.Task<Post.API.ModelDtos.BaseResponse>
  nameWithType.vb: Task(Of BaseResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Post.API.ModelDtos.BaseResponse)
  name.vb: Task(Of BaseResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Post.API.ModelDtos.BaseResponse
    name: BaseResponse
    href: Post.API.ModelDtos.BaseResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Post.API.ModelDtos.BaseResponse
    name: BaseResponse
    href: Post.API.ModelDtos.BaseResponse.html
  - name: )
- uid: Post.API.Contracts.IPostRepository.GetPostsByTag*
  commentId: Overload:Post.API.Contracts.IPostRepository.GetPostsByTag
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_GetPostsByTag_System_String_
  name: GetPostsByTag
  nameWithType: IPostRepository.GetPostsByTag
  fullName: Post.API.Contracts.IPostRepository.GetPostsByTag
- uid: Post.API.Contracts.IPostRepository.IncrementViewCount*
  commentId: Overload:Post.API.Contracts.IPostRepository.IncrementViewCount
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_IncrementViewCount_System_Int32_
  name: IncrementViewCount
  nameWithType: IPostRepository.IncrementViewCount
  fullName: Post.API.Contracts.IPostRepository.IncrementViewCount
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Post.API.Contracts.IPostRepository.SearchPosts*
  commentId: Overload:Post.API.Contracts.IPostRepository.SearchPosts
  href: Post.API.Contracts.IPostRepository.html#Post_API_Contracts_IPostRepository_SearchPosts_System_String_
  name: SearchPosts
  nameWithType: IPostRepository.SearchPosts
  fullName: Post.API.Contracts.IPostRepository.SearchPosts
