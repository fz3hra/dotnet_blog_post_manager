<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">Post.API/Post.API.csproj</projectFile>
    <projectFile profileName="https">Post.API/Post.API.csproj</projectFile>
    <projectFile profileName="http">User.API/User.API.csproj</projectFile>
    <projectFile profileName="https">User.API/User.API.csproj</projectFile>
    <projectFile profileName="dotnet_blog_post_manager">dotnet_blog_post_manager/dotnet_blog_post_manager.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b48bba13-a83c-4402-98b0-2629779a58b2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/Post.API.Tests/Controllers/PostControllerTests.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Post.API.Tests/Repository/PostRepositoryTests.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/User.API.Tests/Controllers/AuthControllerTests.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/User.API.Tests/Repository/AuthRepositoryTests.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/usage.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.dotnet_blog_post_manager/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.dotnet_blog_post_manager/.idea/indexLayout.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.dotnet_blog_post_manager/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Post.API/Controllers/PostController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Post.API/Controllers/PostController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Post.API/Post.API.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/Post.API/Post.API.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Post.API/Repository/PostRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Post.API/Repository/PostRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Post.API/appsettings.Development.json" beforeDir="false" afterPath="$PROJECT_DIR$/Post.API/appsettings.Development.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Post.API/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/Post.API/appsettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/Configurations/MapperConfig.cs" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/Configurations/MapperConfig.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/Contracts/IAuthManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/Contracts/IAuthManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/Controllers/AuthController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/Controllers/AuthController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/Data/UserApi.cs" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/Data/UserApi.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/Data/UserDbContext.cs" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/Data/UserDbContext.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/Repository/AuthRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/Repository/AuthRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/User.API.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/User.API.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/appsettings.Development.json" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/appsettings.Development.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/User.API/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/User.API/appsettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dotnet_blog_post_manager.sln" beforeDir="false" afterPath="$PROJECT_DIR$/dotnet_blog_post_manager.sln" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dotnet_blog_post_manager/dotnet_blog_post_manager.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/dotnet_blog_post_manager/dotnet_blog_post_manager.csproj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="autoShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/Post.API.Tests/Controllers/PostControllerTests.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Post.API.Tests/Repository/PostRepositoryTests.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Post.API.Tests/UnitTest1.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/User.API.Tests/Controllers/AuthControllerTests.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/User.API.Tests/Repository/AuthRepositoryTests.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/User.API.Tests/UnitTest1.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/docfx.json" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/1b445ceb1c5ab1d07b7b55412b10a5e21169ec87228ca8ad8a18a6982f3278/ControllerBase.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2sl4Hk7k6QLXRdOJbpOThPncTqJ" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;.NET Launch Settings Profile.Post.API: http.executor&quot;: &quot;Run&quot;,
    &quot;.NET Launch Settings Profile.User.API: http.executor&quot;: &quot;Run&quot;,
    &quot;.NET Launch Settings Profile.dotnet_blog_post_manager.executor&quot;: &quot;Run&quot;,
    &quot;Docker.Post.API/Dockerfile ef.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.colors.User-Defined File Types&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected=".NET Launch Settings Profile.Post.API: http">
    <configuration name="Post.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Post.API/Post.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Post.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Post.API/Post.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="User.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/User.API/User.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="User.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/User.API/User.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="dotnet_blog_post_manager" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/dotnet_blog_post_manager/dotnet_blog_post_manager.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="dotnet_blog_post_manager" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Post.API/Dockerfile ef" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="mcr.microsoft.comdotnetsdk8.0_ef" />
          <option name="buildCliOptions" value="--target ef" />
          <option name="buildOnly" value="true" />
          <option name="contextFolderPath" value="$PROJECT_DIR$" />
          <option name="sourceFilePath" value="Post.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="Post.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="post.api" />
          <option name="containerName" value="post.api" />
          <option name="contextFolderPath" value="$PROJECT_DIR$" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="Post.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="User.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="user.api" />
          <option name="containerName" value="user.api" />
          <option name="contextFolderPath" value="$PROJECT_DIR$" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="User.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="dotnet_blog_post_manager/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="dotnet_blog_post_manager" />
          <option name="containerName" value="dotnet_blog_post_manager" />
          <option name="contextFolderPath" value="$PROJECT_DIR$" />
          <option name="sourceFilePath" value="dotnet_blog_post_manager/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Post.API/Dockerfile ef" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b48bba13-a83c-4402-98b0-2629779a58b2" name="Changes" comment="" />
      <created>1739016742487</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1739016742487</updated>
      <workItem from="1739016744375" duration="2260000" />
      <workItem from="1739024618803" duration="17503000" />
      <workItem from="1739091463962" duration="21735000" />
      <workItem from="1739163715246" duration="237000" />
      <workItem from="1739164122424" duration="2261000" />
      <workItem from="1739167243433" duration="3318000" />
      <workItem from="1739171088813" duration="4583000" />
      <workItem from="1739175763020" duration="666000" />
      <workItem from="1739176466421" duration="130000" />
      <workItem from="1739176613589" duration="1513000" />
      <workItem from="1739178142499" duration="104000" />
      <workItem from="1739196011797" duration="40000" />
      <workItem from="1739220108474" duration="247000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="dotnet:Microsoft.Identity.Client" />
    <option featureType="dependencySupport" implementationName="executable:kubectl" />
    <option featureType="dependencySupport" implementationName="dotnet:Microsoft.EntityFrameworkCore.Abstractions" />
    <option featureType="dependencySupport" implementationName="dotnet:Microsoft.EntityFrameworkCore.Relational" />
    <option featureType="dependencySupport" implementationName="dotnet:Microsoft.EntityFrameworkCore" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>